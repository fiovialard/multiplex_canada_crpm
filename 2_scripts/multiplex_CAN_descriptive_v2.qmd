---
title: "Multiplex Canada Descriptive Analysis"
format: 
  html:
    embed-resources: true
editor: visual
author: "Fio Vialard"
---

```{r setup, include=FALSE}
knitr::opts_knit$set(root.dir = "~/R files/multiplex canada") 
# to ensure that the project is at the root directory
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, fig.width=12, fig.height=8)
```

## Set-up

### Packages

```{r}
library(tidyverse)
library(gridExtra)
#install.packages("naniar")
library(naniar)
library(visdat)
library(cowplot)
#tinytex::reinstall_tinytex(repository = "illinois")
#install.packages("gganimate")
library(gganimate)
library(gifski)
#install.packages("gifski")
```

### Import clean combined dataset

This file consists of the testing result data from each site of the study and app-based data combined, cleaned and prepared for further analysis

```{r}
multiplex<- read.csv("3_intermediate/wrangling/20230728__multiplex_combined_sites.csv")

multiplex %>%
  select(-c(p_id,DateRecuit)) %>%
head(3)
```

## Factorize and summarize columns

For now remove comments

```{r}
multiplex1 <- multiplex %>% 
  select(-c(comments)) %>%
 mutate_if(is.character, as.factor) %>% 
  arrange(p_id)

multiplex1%>%
  select(-c(p_id,DateRecuit)) %>%
summary()
```

We can see a lot of missing values in each column

Important: One patient has an entry at the labs but not on the apps whereas another patient is an entry on the app but no information was recorded and no lab results (error?)

### quick visualization

Not shown on the published version because include individual missing data patterns

```{r}
quick_vis<- vis_dat(multiplex1)
#quick_vis

quick_vis_miss<- vis_miss(multiplex1)
#quick_vis_miss
```

most missing values seem to be for the type past STD, sharing needles questions and patient-reported outcomes

## Missing values analysis

```{r}
total.na <- sum(is.na(multiplex1))

indiv.na<- sum(!complete.cases(multiplex1))

prop.indiv.na <- round(indiv.na/nrow(multiplex1) *100, digits =2)

```

Total missing values: `r total.na`

Number of individuals in the dataset missing at least one value: `r indiv.na`

Proportion of individuals with at least one missing value: `r prop.indiv.na`%

### Table to find out which columns have most missing values

```{r}
missing.values <- multiplex1 %>%
  gather(key = "key", value = "val") %>%
  group_by(key) %>%
  summarise(num.missing = sum(is.na(val))) %>%
  filter(num.missing > 0) %>%
  arrange(desc(num.missing))

head(missing.values)
```

Most missing values for sharing needles, type of past STD (but this could be due to the fact that they did not have a past STD and did not report using injection drugs so did not respond to this question - structural missingness), and patient reported outcomes.

## Visualization of missing values

### By column

```{r}
# arrange data to visualize by column 

missing.values <- multiplex1 %>%
  gather(key = "key", value = "val") %>%
  mutate(isna = is.na(val)) %>%
  group_by(key) %>%
  mutate(total = n()) %>%
  group_by(key, total, isna) %>%
  summarise(num.isna = n()) %>%
  mutate(pct = num.isna / total * 100,
         frame = "raw")

levels <-
    (missing.values  %>% filter(isna == T) %>% arrange(desc(pct)))$key # levels = missing value or not

#plot
column.na.plot <- missing.values %>%
      ggplot() +
        geom_bar(aes(x = reorder(key, desc(pct)), 
                     y = pct, fill=isna), 
                 stat = 'identity', alpha=0.8) +
      scale_x_discrete(limits = levels) +
      scale_fill_manual(name = "", 
                        values = c('#0067c7', '#e9334d'), labels = c("Present", "Missing")) +
      coord_flip() +
      labs(title = "Percentage of missing values", x =
             'Variable', y = "% of missing values")+ 
  theme(legend.position = "none", 
        plot.title=element_text(family='', face='bold', size=16),# get rid of legend on the right
        axis.text=element_text(size= 11)
        ) 

```

### By row

Not shown on published rendered script because contains individual missing patterns

```{r}
# arrange by row 

missing.values2 <- multiplex1 %>%
  mutate(id = row_number()) %>%
  gather(-id, key = "key", value = "val") %>%
  mutate(isna = is.na(val),
         frame = "Raw")

# plot 

row.na.plot <-  missing.values2 %>%
  ggplot(aes(key, id, fill = isna)) +
  geom_raster(alpha=0.8) +  
  scale_fill_manual(name = "",
        values = c('#0067c7', '#e33338'),
        labels = c("Present", "Missing")) +
    scale_x_discrete(limits = levels) +
    labs(x = "Variable",
           y = "Row Number", title = "Missing values in rows") +
    coord_flip() +
  geom_hline(yintercept=164, colour = "darkblue")+ # corresponds to the limit  between both datasets 
  theme(plot.title=element_text(family='', face='bold', size=16), 
        axis.text.y=element_blank(),  #remove y axis labels
        axis.ticks.y=element_blank()  #remove y axis ticks
        )

```

### Plots

```{r}

column.na.plot

na.graphs<- plot_grid(column.na.plot, row.na.plot, rel_widths = c(1.75, 2), align = "h") # showing both together

#na.graphs

#save
ggsave(na.graphs, filename = "3_intermediate/missing_data/missing_data_plots_all.png", 
       device = "png", width =  12, height = 8)
```

A lot of missing values but some of these include preference data mostly missing data are from RECAP site. Also one of them is an error because it has a participant ID but not other data so we can remove it.

## Check whether missing data is due to question piping on questionnaire

### For type of STD

Could be missing because patient did not have a past STD and did not answer the question

```{r}
multiplex.no.past.std <- 
  multiplex1%>% filter(PastSTD == "0-No")

summary(multiplex.no.past.std$TypePastSTD)
```

They were all coded as NA or None. should all be coded as "None"

### For sharing needles

```{r}
multiplex.no.injection.drugs <- 
  multiplex1%>% filter(PastInjectDrugs == "0-No")

summary(multiplex.no.injection.drugs$ShareNeedles)
```

Also all coded as NA or none - same as above

### Change result to "None" and remove empty row

From the unfactorized dataset or else the characters strings are lost

```{r}
multiplex2 <- 
  multiplex %>% mutate (TypePastSTD = ifelse(PastSTD == "0-No", "None", multiplex$TypePastSTD),
                        ShareNeedles = ifelse(PastInjectDrugs == "0-No", "None", multiplex$ShareNeedles)) %>%
  filter(DateRecuit!="2021-08-12") # excluding the error individual
  

summary(as.factor(multiplex2$TypePastSTD))
summary(as.factor(multiplex2$ShareNeedles))

# number of rezo 

multiplex2 %>% filter (Clinic.Location == "REZO") %>% nrow()

# number of recap

multiplex2 %>% filter (Clinic.Location != "REZO") %>% nrow()

# save

write.csv(multiplex2, "3_intermediate/missing_data/20230908_multiplex_na_final.csv", 
          row.names = F)
```

Much less NAs

### Visualization

```{r}
# columns
missing.values1 <- multiplex2 %>%
  select(-comments) %>%
  gather(key = "key", value = "val") %>%
  mutate(isna = is.na(val)) %>%
  group_by(key) %>%
  mutate(total = n()) %>%
  group_by(key, total, isna) %>%
  summarise(num.isna = n()) %>%
  mutate(pct = num.isna / total * 100,
         frame = "Fixed")

levels1 <-
    (missing.values1  %>% filter(isna == T) %>% arrange(desc(pct)))$key

column.na.plot <- missing.values1 %>%
      ggplot() +
        geom_bar(aes(x = reorder(key, desc(pct)), 
                     y = pct, fill=isna), 
                 stat = 'identity', alpha=0.8) +
      scale_x_discrete(limits = levels1) +
      scale_fill_manual(name = "", 
                        values = c('#0067c7', '#e33338'), labels = c("Present", "Missing")) +
      coord_flip() +
      labs(title = "Percentage of missing values", x =
             'Variable', y = "% of missing values")+
  theme(legend.position = "none", 
        plot.title=element_text(family='', face='bold', size=16),
        axis.text=element_text(size= 11))# get rid of legend on the right

column.na.plot
# rows 
missing.values3 <- multiplex2 %>%
  select(-comments) %>%
  mutate(id = row_number()) %>%
  gather(-id, key = "key", value = "val") %>%
  mutate(isna = is.na(val),
         frame = "fixed")  

row.na.plot <-  missing.values3 %>%
  ggplot(aes(key, id, fill = isna)) +
  geom_raster(alpha=0.8) +  
  scale_fill_manual(name = "",
        values = c('#0067c7', '#e33338'),
        labels = c("Present", "Missing")) +
    scale_x_discrete(limits = levels1) +
    labs(x = "Variable",
           y = "Row Number", title = "Missing values in rows") +
    coord_flip() +
 geom_hline(yintercept=164, colour = "darkblue")+
  theme(plot.title=element_text(family='', face='bold', size=16), 
        axis.text.y=element_blank(),  #remove y axis labels
        axis.ticks.y=element_blank()  #remove y axis ticks
        )

# na.graphs1<- grid.arrange(column.na.plot, row.na.plot, ncol = 2)
# 
# ggsave(na.graphs1, filename = "3_intermediate/missing_data/missing_data_plots_fixed.png",
#        device = "png", width =  12, height = 8)
```

### Animate the plot

This is just done for fun, to see how much the missing data reduces after fixing the piping errors

```{r}
### animate columns
data <- rbind(missing.values, missing.values1) # collate the two  frames 

animated.column.na <- data %>%
      ggplot() +
        geom_bar(aes(x = reorder(key, desc(pct)), 
                     y = pct, fill=isna), 
                 stat = 'identity', alpha=0.8) +
      scale_x_discrete(limits = levels1) +
      scale_fill_manual(name = "", 
                        values = c('#0067c7', '#e33338'), labels = c("Present", "Missing")) +
      coord_flip() +
      labs(title = "Percentage of missing values", x =
             'Variable', y = "% of missing values")+
  theme(legend.position = "none", 
        plot.title=element_text(family='', face='bold', size=16),# get rid of legend on the right
        axis.text=element_text(size= 11)) +
  #gganimate code
  transition_states(
    frame,
    transition_length = 2,
    state_length = 1) +
  ease_aes('sine-in-out')

# render
animate(animated.column.na, duration = 5, fps = 20, width = 8, height = 8, 
        units = "in", res= 150, renderer = gifski_renderer())

#save
anim_save("3_intermediate/missing_data/missing_data_animation1.gif")

```

## Removing patient reported outcomes

```{r}
multiplex3 <- multiplex2 %>% 
  select(-c(FearPOC:comments))

indiv.na1<- sum(!complete.cases(multiplex3))
```

Removing the follow-up information, if we removed all data with at least 1 missing value we would be left with `r indiv.na1` observations.

### Visualization of data without patient-reported outcomes

```{r}
# columns
missing.values2 <- multiplex3 %>%
  gather(key = "key", value = "val") %>%
  mutate(isna = is.na(val)) %>%
  group_by(key) %>%
  mutate(total = n()) %>%
  group_by(key, total, isna) %>%
  summarise(num.isna = n()) %>%
  mutate(pct = num.isna / total * 100)

levels2 <-
    (missing.values2  %>% filter(isna == T) %>% arrange(desc(pct)))$key

column.na.plot <- missing.values2 %>%
      ggplot() +
        geom_bar(aes(x = reorder(key, desc(pct)), 
                     y = pct, fill=isna), 
                 stat = 'identity', alpha=0.8) +
      scale_x_discrete(limits = levels2) +
      scale_fill_manual(name = "", 
                        values = c('#0067c7', '#e33338'), labels = c("Present", "Missing")) +
      coord_flip() +
      labs(title = "Percentage of missing values", x =
             'Variable', y = "% of missing values")+
  theme(legend.position = "none", 
        plot.title=element_text(family='', face='bold', size=16),# get rid of legend on the right
        axis.text=element_text(size= 11)
        ) 
column.na.plot 

# rows 
missing.values4 <- multiplex3 %>%
  mutate(id = row_number()) %>%
  gather(-id, key = "key", value = "val") %>%
  mutate(isna = is.na(val))

row.na.plot <-  missing.values4 %>%
  ggplot(aes(key, id, fill = isna)) +
  geom_raster(alpha=0.8) +  
  scale_fill_manual(name = "",
        values = c('#0067c7', '#e33338'),
        labels = c("Present", "Missing")) +
    scale_x_discrete(limits = levels2) +
    labs(x = "Variable",
           y = "Row Number", title = "Missing values in rows") +
    coord_flip() +
 geom_hline(yintercept=164, colour = "darkblue")+
  theme(plot.title=element_text(family='', face='bold', size=16), 
        axis.text.y=element_blank(),  #remove y axis labels
        axis.ticks.y=element_blank()  #remove y axis ticks
        )

# na.graphs2<- grid.arrange(column.na.plot, row.na.plot, ncol = 2)
# 
# na.graphs2
# 
# ggsave(na.graphs2, filename = "3_intermediate/missing_data/missing_data_plots_no_prom.png", 
#        device = "png", width =  12, height = 8)
```

[Next steps:]{.underline}

We will perform mice with the following assumptions: 1) site is important to keep and code as variable in the multiple imputations; 2) remove one individual with more than 50% missing data; 3) remove the patient-reported outcomes

## Update

Removed the patient-reported outcomes to create a new dataset for imputation

### Save new dataset

```{r}
write.csv(multiplex3, "3_intermediate/missing_data/multiplex_na_final_no_prom.csv", 
          row.names = F)
```
